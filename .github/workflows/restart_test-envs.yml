name: 'Restart testmilj√∏er'
on:
  workflow_call:
    inputs:
      to-mock:
        description: 'Deploy to mock?'
        required: false
        default: false
        type: boolean
      to-dev-gcp:
        description: 'Deploy to dev (dev-gcp)?'
        required: false
        default: false
        type: boolean
      to-dev-fss:
        description: 'Deploy to dev-fss?'
        required: false
        default: false
        type: boolean

jobs:
  create-docker-tag-job:
    name: 'Resolve Docker Image Tag'
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.docker-push.outputs.image}}
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: nais/docker-build-push@v0
        id: docker-push
        with:
          platforms: linux/amd64,linux/arm64/v8
          team: teamdigisos
          tag: latest

  deploy-to-dev-gcp:
    name: 'NAIS Deploy to dev (dev-gcp)'
    if: inputs.to-dev-gpc == true
    runs-on: ubuntu-latest
    needs: create-docker-tag-job
    steps:
      - uses: actions/checkout@v4
      - name: 'Deploy to dev'
        uses: nais/deploy/actions/deploy@v2
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          RESOURCE: nais/dev/dev.yaml
          CLUSTER: dev-gcp
          REF: ${{ github.sha }}
          PRINT_PAYLOAD: true
          VAR: image=${{ needs.create-docker-tag-job.outputs.image }}

  deploy-to-mock:
    name: 'NAIS Deploy to mock (dev-gcp)'
    if: inputs.to-mock == true
    runs-on: ubuntu-latest
    needs: create-docker-tag-job
    steps:
      - uses: actions/checkout@v4

      - name: 'NAIS Deploy to mock (dev-gcp)'
        uses: nais/deploy/actions/deploy@v2
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          RESOURCE: nais/dev/mock.yaml
          CLUSTER: dev-gcp
          REF: ${{ github.sha }}
          PRINT_PAYLOAD: true
          VAR: image=${{ needs.create-docker-tag-job.outputs.image }}

  deploy-to-dev-fss:
    name: 'NAIS Deploy to dev-fss'
    if: inputs.to-dev-fss == true
    runs-on: ubuntu-latest
    needs: create-docker-tag-job
    steps:
      - uses: actions/checkout@v4

      - name: 'Deploy to dev-fss'
        uses: nais/deploy/actions/deploy@v2
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          RESOURCE: nais/dev/dev-fss.yaml
          CLUSTER: dev-fss
          REF: ${{ github.sha }}
          PRINT_PAYLOAD: true
          VAR: image=${{ needs.create-docker-tag-job.outputs.image }}
